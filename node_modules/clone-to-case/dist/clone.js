"use strict";

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var to = require("to-case");
var type = require("type-detect");

var cloneToCase = function cloneToCase(obj, tocase) {
	if (["undefined", "null"].indexOf(type(obj)) >= 0) return obj;

	if (["object"].indexOf(type(obj)) < 0) throw new Error("Invalid obj argument type " + type(obj) + "; expected \"object\", \"null\", or \"undefined\"");
	if (type(tocase) !== "string") throw new Error("Invalid tocase argument type " + type(tocase) + "; expected \"string\"");

	var result = {};
	(0, _keys2.default)(obj).map(function (key) {
		var val = obj[key];
		var newKey = to[tocase](key);
		if (type(val) === "object") result[newKey] = cloneToCase(obj[key], tocase);else result[newKey] = obj[key];
	});
	return result;
};

module.exports = cloneToCase;